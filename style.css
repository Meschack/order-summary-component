/***** Flex learning Section *****/

.container {
  /* padding: 2rem; */
  border: 2px solid;
  border-radius: 5px;
  height: 500px;

  display: flex; /* Pour aligner les enfants du conteneur côte à côte par défaut */

  /* Positionner les éléments dans le conteneur */
  /* align-items: ; */ /* Permet d'indiquer l'alignement sur l'axe secondaire */
  /* JUSTIFY-CONTENT : Permet d'indiquer l'alignement sur l'axe principal */

  justify-content: center; /* Permet de centrer horizontalement les enfants */
  /* justify-content: start; Comportement par défaut. Les éléments sont positionnés au début du parent */
  /* justify-content: end; Permet de positionnner les enfants à la fin de l'espace parent */
  /* justify-content: space-between; Permet de distribuer les enfants sur l'axe */
  /* justify-content: space-around; Around : Autour | Met de l'espace entre les enfants mais aussi permet de faire en sorte que les enfants extrêmes ne soient pas collés au parent */
  /* justify-content: stretch; */

  /* Espacer les enfants avec la propriété gap */
  gap: 10px;

  /* Définir comment s'effectue le retour à la ligne */
  /* flex-wrap: wrap; Permet de renvoyer les éléments à la ligne lorsqu'elle n'est plus capable de prendre un élément sans qu'il n'y ait de débordement */

  /* align-items: center; */
  /* align-items: flex-end; */
  align-items: center;

  flex-direction: column; /* Lorsque les éléments sont positionnés suivant la colonne, on utilise align-items pour les aligner sur l'horizontal et justify-content est utilisé pour oes aligner sur la verticale */
}

.container .enfant {
  height: 50px;
  width: 500px;
}

.container .enfant:nth-child(1) {
  background-color: brown;
}

.container .enfant:nth-child(2) {
  background-color: red;
}

.container .enfant:nth-child(3) {
  background-color: purple;
}

.container .enfant:nth-child(4) {
  background-color: yellow;
}

.container .enfant:nth-child(5) {
  background-color: blue;
}

.container .enfant:nth-child(6) {
  background-color: black;
}

/* Les div sont par défaut des éléments de type bloc */
/* Le contraire de bloc, c'est inline */

/***** End Flex learning Section *****/

/***** Project CSS Section *****/

@font-face {
  font-family: "Red Hat";
  src: url("./fonts/RedHatDisplay-Regular.ttf");
}

@font-face {
  font-family: "Red Hat Bold";
  src: url("./fonts/RedHatDisplay-Bold.ttf");
}

* {
  font-family: "Red Hat", JetBrains Mono;
  padding: 0;
  margin: 0;
  box-sizing: border-box; /* Des propriétés de reset CSS */
}

body {
  background: url("./images/pattern-background-desktop.svg") center/cover
    no-repeat;
  background-color: hsl(225, 100%, 94%);

  /* display: flex;
  justify-content: center; */

  padding: 2rem;
  text-align: center;
}

main {
  overflow: hidden;
  border-radius: 10px;
  width: 400px;

  margin: 0 auto; /* Pour centrer le bloc horizontalement par rapport à son parent direct */
}

main header {
  background: url("./images/illustration-hero.svg");
  height: 30vh; /* Viewport Height :  Hauteur de l'écran de visualisation */
  min-height: 200px;
}

/* 
main header img {
  width: 400px;
} */

section {
  background-color: white;
  padding: 2rem;

  display: flex;
  flex-direction: column;
  gap: 1rem;
}

section h1,
section h3 {
  font-family: "Red Hat Bold";
  /* font-weight: 900; */
  color: hsl(223, 47%, 23%);
}

section p,
section span {
  color: hsl(224, 23%, 55%);
}

section .plans {
  display: flex;
  gap: 1rem;
  align-items: center;

  background-color: hsl(225, 100%, 98%);
  padding: 1rem; /* 1rem = 16px */
  border-radius: 10px;
}

section .plans span {
  text-align: left;
} /* ??? */

section .plans a {
  margin-left: auto;
}

section .actions {
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

section .actions button {
  padding: 0.8rem;
  border-radius: 10px;
  border: none;
  font-weight: 900;
  cursor: pointer;
}

section .actions button:first-child {
  background-color: hsl(245, 75%, 52%);
  color: white;
  /* box-shadow: right bottom remplissage color; */

  box-shadow: 0 8px 32px hsl(224, 23%, 55%);
  transition: 0.3s;
}

section .actions button:first-child:hover {
  opacity: 0.8;
}

section .actions button:last-child {
  background-color: transparent;
  color: hsl(224, 23%, 55%);
}
/***** End Project CSS Section *****/
